## JSON formatted HTTP status codes
## https://github.com/CryptoBloks/nginx-http-errors

    error_page 400 = @400;
    location @400 {
        return 400 '{"status":400,"message":"Bad request"}\n';
        default_type application/json;
    }

    error_page 401 = @401;
    location @401 {
        return 401 '{"status":401,"message":"Unauthorized"}\n';
        default_type application/json;
    }

    error_page 402 = @402;
    location @402 {
        return 402 '{"status":402,"message":"Payment Required"}\n';
        default_type application/json;
    }

    error_page 403 = @403;
    location @403 {
        return 403 '{"status":403,"message":"Forbidden"}\n';
        default_type application/json;
    }

    error_page 404 = @404;
    location @404 {
        return 404 '{"status":404,"message":"Not Found"}\n';
        default_type application/json;
    }

    error_page 405 = @405;
    location @405 {
        return 405 '{"status":405,"message":"Method Not Allowed"}\n';
        add_header Allow "GET, POST, HEAD" always;
        default_type application/json;
    }

    error_page 406 = @406;
    location @406 {
        return 406 '{"status":406,"message":"Not Acceptable"}\n';
    }

    error_page 408 = @408;
    location @408 {
        return 408 '{"status":408,"message":"Request Timeout"}\n';
    }

    error_page 409 = @409;
    location @409 {
        return 409 '{"status":409,"message":"Conflict"}\n';
    }

    error_page 410 = @410;
    location @410 {
        return 410 '{"status":410,"message":"Gone"}\n';
    }

    error_page 411 = @411;
    location @411 {
        return 411 '{"status":411,"message":"Length Required"}\n';
    }
    
    error_page 412 = @412;
    location @412 {
        return 412 '{"status":412,"message":"Precondition Failed"}\n';
    }

    error_page 413 = @413;
    location @413 {
        return 413 '{"status":413,"message":"Payload Too Large"}\n';
        default_type application/json;
    }

    error_page 414 = @414;
    location @414 {
        return 414 '{"status":414,"message":"URI Too Long"}\n';
        default_type application/json;
    }

    error_page 415 = @415;
    location @415 {
        return 415 '{"status":415,"message":"Unsupported Media Type"}\n';
        default_type application/json;
    }

    error_page 416 = @416;
    location @416 {
        return 416 '{"status":416,"message":"Range Not Satisfiable"}\n';
        default_type application/json;
    }

    error_page 417 = @417;
    location @417 {
        return 417 '{"status":417,"message":"Expectation Failed"}\n';
        default_type application/json;
    }

    error_page 418 = @418;
    location @418 {
        return 418 '{"status":418,"message":"I\'m a Teapot"}\n';
        default_type application/json;
    }

    error_page 421 = @421;
    location @421 {
        return 421 '{"status":421,"message":"Misdirected Request"}\n';
        default_type application/json;
    }

    error_page 422 = @422;
    location @422 {
        return 422 '{"status":422,"message":"Unprocessable Entity"}\n';
        default_type application/json;
    }

    error_page 423 = @423;
    location @423 {
        return 423 '{"status":423,"message":"Locked"}\n';
        default_type application/json;
    }

    error_page 425 = @425;
    location @425 {
        return 425 '{"status":425,"message":"Too Early"}\n';
        default_type application/json;
    }

    error_page 426 = @426;
    location @426 {
        return 426 '{"status":426,"message":"Upgrade Required"}\n';
        default_type application/json;
    }

    error_page 428 = @428;
    location @428 {
        return 428 '{"status":428,"message":"Precondition Required"}\n';
        default_type application/json;
    }

    error_page 429 = @429;
    location @429 {
        return 429 '{"status":429,"message":"Too Many Requests"}\n';
        default_type application/json;
    }

    error_page 431 = @431;
    location @431 {
        return 431 '{"status":431,"message":"Request Header Fields Too Large"}\n';
        default_type application/json;
    }

    error_page 451 = @451;
    location @451 {
        return 451 '{"status":451,"message":"Unavailable For Legal Reasons"}\n';
        default_type application/json;
    }

    error_page 500 = @500;
    location @500 {
        return 500 '{"status":500,"message":"Internal Server Error"}\n';
        default_type application/json;
    }

    error_page 501 = @501;
    location @501 {
        return 501 '{"status":501,"message":"Not Implemented"}\n';
        default_type application/json;
    }

    error_page 502 = @502;
    location @502 {
        return 502 '{"status":502,"message":"Bad Gateway"}\n';
        default_type application/json;
    }

    error_page 503 = @503;
    location @503 {
        return 503 '{"status":503,"message":"Service Unavailable"}\n';
        default_type application/json;
    }

    error_page 504 = @504;
    location @504 {
        return 504 '{"status":504,"message":"Gateway Timeout"}\n';
        default_type application/json;
    }
    
    error_page 505 = @505;
    location @505 {
        return 505 '{"status":505,"message":"HTTP Version Not Supported"}\n';
        default_type application/json;
    }
    
    error_page 506 = @506;
    location @506 {
        return 506 '{"status":506,"message":"Variant Also Negotiates"}\n';
        default_type application/json;
    }
    
    error_page 507 = @507;
    location @507 {
        return 507 '{"status":507,"message":"Insufficient Storage"}\n';
        default_type application/json;
    }
    
    error_page 508 = @508;
    location @508 {
        return 508 '{"status":508,"message":"Loop Detected"}\n';
        default_type application/json;
    }
    
    error_page 510 = @510;
    location @510 {
        return 510 '{"status":510,"message":"Not Extended"}\n';
        default_type application/json;
    }
    
    error_page 511 = @511;
    location @511 {
        return 511 '{"status":511,"message":"Network Authentication Required"}\n';
        default_type application/json;
    }